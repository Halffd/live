#!/usr/bin/env node
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/tsup/assets/cjs_shims.js
var importMetaUrlShim;
var init_cjs_shims = __esm({
  "node_modules/tsup/assets/cjs_shims.js"() {
    importMetaUrlShim = typeof document === "undefined" ? new (require("url")).URL("file:" + __filename).href : document.currentScript && document.currentScript.src || new URL("main.js", document.baseURI).href;
  }
});

// node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/dayjs/dayjs.min.js"(exports, module2) {
    init_cjs_shims();
    !function(t, e) {
      typeof exports == "object" && typeof module2 != "undefined" ? module2.exports = e() : typeof define == "function" && define.amd ? define(e) : (t = typeof globalThis != "undefined" ? globalThis : t || self).dayjs = e();
    }(exports, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", f = "month", h = "quarter", c = "year", d = "date", $ = "Invalid Date", l = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_") }, m = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, g = { s: m, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date())
          return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, f), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), f);
        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: f, y: c, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: h }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return t2 === void 0;
      } }, D = "en", v = {};
      v[D] = M;
      var p = function(t2) {
        return t2 instanceof _;
      }, S = function(t2, e2, n2) {
        var r2;
        if (!t2)
          return D;
        if (typeof t2 == "string")
          v[t2] && (r2 = t2), e2 && (v[t2] = e2, r2 = t2);
        else {
          var i2 = t2.name;
          v[i2] = t2, r2 = i2;
        }
        return !n2 && r2 && (D = r2), r2 || !n2 && D;
      }, w = function(t2, e2) {
        if (p(t2))
          return t2.clone();
        var n2 = typeof e2 == "object" ? e2 : {};
        return n2.date = t2, n2.args = arguments, new _(n2);
      }, O = g;
      O.l = S, O.i = p, O.w = function(t2, e2) {
        return w(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var _ = function() {
        function M2(t2) {
          this.$L = S(t2.locale, null, true), this.parse(t2);
        }
        var m2 = M2.prototype;
        return m2.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (e2 === null)
              return new Date(NaN);
            if (O.u(e2))
              return new Date();
            if (e2 instanceof Date)
              return new Date(e2);
            if (typeof e2 == "string" && !/Z$/i.test(e2)) {
              var r2 = e2.match(l);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
              }
            }
            return new Date(e2);
          }(t2), this.$x = t2.x || {}, this.init();
        }, m2.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m2.$utils = function() {
          return O;
        }, m2.isValid = function() {
          return !(this.$d.toString() === $);
        }, m2.isSame = function(t2, e2) {
          var n2 = w(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m2.isAfter = function(t2, e2) {
          return w(t2) < this.startOf(e2);
        }, m2.isBefore = function(t2, e2) {
          return this.endOf(e2) < w(t2);
        }, m2.$g = function(t2, e2, n2) {
          return O.u(t2) ? this[e2] : this.set(n2, t2);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t2, e2) {
          var n2 = this, r2 = !!O.u(e2) || e2, h2 = O.p(t2), $2 = function(t3, e3) {
            var i2 = O.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a);
          }, l2 = function(t3, e3) {
            return O.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, g2 = "set" + (this.$u ? "UTC" : "");
          switch (h2) {
            case c:
              return r2 ? $2(1, 0) : $2(31, 11);
            case f:
              return r2 ? $2(1, M3) : $2(0, M3 + 1);
            case o:
              var D2 = this.$locale().weekStart || 0, v2 = (y2 < D2 ? y2 + 7 : y2) - D2;
              return $2(r2 ? m3 - v2 : m3 + (6 - v2), M3);
            case a:
            case d:
              return l2(g2 + "Hours", 0);
            case u:
              return l2(g2 + "Minutes", 1);
            case s:
              return l2(g2 + "Seconds", 2);
            case i:
              return l2(g2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m2.$set = function(t2, e2) {
          var n2, o2 = O.p(t2), h2 = "set" + (this.$u ? "UTC" : ""), $2 = (n2 = {}, n2[a] = h2 + "Date", n2[d] = h2 + "Date", n2[f] = h2 + "Month", n2[c] = h2 + "FullYear", n2[u] = h2 + "Hours", n2[s] = h2 + "Minutes", n2[i] = h2 + "Seconds", n2[r] = h2 + "Milliseconds", n2)[o2], l2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
          if (o2 === f || o2 === c) {
            var y2 = this.clone().set(d, 1);
            y2.$d[$2](l2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else
            $2 && this.$d[$2](l2);
          return this.init(), this;
        }, m2.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m2.get = function(t2) {
          return this[O.p(t2)]();
        }, m2.add = function(r2, h2) {
          var d2, $2 = this;
          r2 = Number(r2);
          var l2 = O.p(h2), y2 = function(t2) {
            var e2 = w($2);
            return O.w(e2.date(e2.date() + Math.round(t2 * r2)), $2);
          };
          if (l2 === f)
            return this.set(f, this.$M + r2);
          if (l2 === c)
            return this.set(c, this.$y + r2);
          if (l2 === a)
            return y2(1);
          if (l2 === o)
            return y2(7);
          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[l2] || 1, m3 = this.$d.getTime() + r2 * M3;
          return O.w(m3, this);
        }, m2.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m2.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid())
            return n2.invalidDate || $;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = O.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, f2 = n2.months, h2 = function(t3, n3, i3, s3) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].substr(0, s3);
          }, c2 = function(t3) {
            return O.s(s2 % 12 || 12, t3, "0");
          }, d2 = n2.meridiem || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          }, l2 = { YY: String(this.$y).slice(-2), YYYY: this.$y, M: a2 + 1, MM: O.s(a2 + 1, 2, "0"), MMM: h2(n2.monthsShort, a2, f2, 3), MMMM: h2(f2, a2), D: this.$D, DD: O.s(this.$D, 2, "0"), d: String(this.$W), dd: h2(n2.weekdaysMin, this.$W, o2, 2), ddd: h2(n2.weekdaysShort, this.$W, o2, 3), dddd: o2[this.$W], H: String(s2), HH: O.s(s2, 2, "0"), h: c2(1), hh: c2(2), a: d2(s2, u2, true), A: d2(s2, u2, false), m: String(u2), mm: O.s(u2, 2, "0"), s: String(this.$s), ss: O.s(this.$s, 2, "0"), SSS: O.s(this.$ms, 3, "0"), Z: i2 };
          return r2.replace(y, function(t3, e3) {
            return e3 || l2[t3] || i2.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, $2) {
          var l2, y2 = O.p(d2), M3 = w(r2), m3 = (M3.utcOffset() - this.utcOffset()) * e, g2 = this - M3, D2 = O.m(this, M3);
          return D2 = (l2 = {}, l2[c] = D2 / 12, l2[f] = D2, l2[h] = D2 / 3, l2[o] = (g2 - m3) / 6048e5, l2[a] = (g2 - m3) / 864e5, l2[u] = g2 / n, l2[s] = g2 / e, l2[i] = g2 / t, l2)[y2] || g2, $2 ? D2 : O.a(D2);
        }, m2.daysInMonth = function() {
          return this.endOf(f).$D;
        }, m2.$locale = function() {
          return v[this.$L];
        }, m2.locale = function(t2, e2) {
          if (!t2)
            return this.$L;
          var n2 = this.clone(), r2 = S(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return O.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      }(), b = _.prototype;
      return w.prototype = b, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", f], ["$y", c], ["$D", d]].forEach(function(t2) {
        b[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), w.extend = function(t2, e2) {
        return t2.$i || (t2(e2, _, w), t2.$i = true), w;
      }, w.locale = S, w.isDayjs = p, w.unix = function(t2) {
        return w(1e3 * t2);
      }, w.en = v[D], w.Ls = v, w.p = {}, w;
    });
  }
});

// node_modules/dayjs/plugin/relativeTime.js
var require_relativeTime = __commonJS({
  "node_modules/dayjs/plugin/relativeTime.js"(exports, module2) {
    init_cjs_shims();
    !function(r, e) {
      typeof exports == "object" && typeof module2 != "undefined" ? module2.exports = e() : typeof define == "function" && define.amd ? define(e) : (r = typeof globalThis != "undefined" ? globalThis : r || self).dayjs_plugin_relativeTime = e();
    }(exports, function() {
      "use strict";
      return function(r, e, t) {
        r = r || {};
        var n = e.prototype, o = { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
        function i(r2, e2, t2, o2) {
          return n.fromToBase(r2, e2, t2, o2);
        }
        t.en.relativeTime = o, n.fromToBase = function(e2, n2, i2, d2, u) {
          for (var f, a, s, l = i2.$locale().relativeTime || o, h = r.thresholds || [{ l: "s", r: 44, d: "second" }, { l: "m", r: 89 }, { l: "mm", r: 44, d: "minute" }, { l: "h", r: 89 }, { l: "hh", r: 21, d: "hour" }, { l: "d", r: 35 }, { l: "dd", r: 25, d: "day" }, { l: "M", r: 45 }, { l: "MM", r: 10, d: "month" }, { l: "y", r: 17 }, { l: "yy", d: "year" }], m = h.length, c = 0; c < m; c += 1) {
            var y = h[c];
            y.d && (f = d2 ? t(e2).diff(i2, y.d, true) : i2.diff(e2, y.d, true));
            var p = (r.rounding || Math.round)(Math.abs(f));
            if (s = f > 0, p <= y.r || !y.r) {
              p <= 1 && c > 0 && (y = h[c - 1]);
              var v = l[y.l];
              u && (p = u("" + p)), a = typeof v == "string" ? v.replace("%d", p) : v(p, n2, y.l, s);
              break;
            }
          }
          if (n2)
            return a;
          var M = s ? l.future : l.past;
          return typeof M == "function" ? M(a) : M.replace("%s", a);
        }, n.to = function(r2, e2) {
          return i(r2, e2, this, true);
        }, n.from = function(r2, e2) {
          return i(r2, e2, this);
        };
        var d = function(r2) {
          return r2.$u ? t.utc() : t();
        };
        n.toNow = function(r2) {
          return this.to(d(this), r2);
        }, n.fromNow = function(r2) {
          return this.from(d(this), r2);
        };
      };
    });
  }
});

// src/cli.ts
__markAsModule(exports);
init_cjs_shims();
var import_yargs = __toModule(require("yargs"));

// src/cli/commands/channel.ts
init_cjs_shims();
var import_chalk2 = __toModule(require("chalk"));

// src/cli/helpers.ts
init_cjs_shims();
var import_chalk = __toModule(require("chalk"));
var import_conf = __toModule(require("conf"));
var import_dayjs = __toModule(require_dayjs_min());
var import_relativeTime = __toModule(require_relativeTime());
var import_terminal_link = __toModule(require("terminal-link"));

// src/index.ts
init_cjs_shims();

// src/client.ts
init_cjs_shims();
var import_axios = __toModule(require("axios"));
var import_axios_retry = __toModule(require("axios-retry"));

// src/types/index.ts
init_cjs_shims();

// src/types/channel.ts
init_cjs_shims();
var Channel = class {
  constructor(raw) {
    this.raw = raw;
  }
  toRaw() {
    return this.raw;
  }
  get channelId() {
    return this.raw.id;
  }
  get name() {
    return this.raw.name;
  }
  get englishName() {
    return this.raw.english_name;
  }
  get channelType() {
    return this.raw.type;
  }
  get organization() {
    return this.raw.org;
  }
  get group() {
    var _a, _b;
    return (_b = this.raw.group) != null ? _b : (_a = this.raw.suborg) == null ? void 0 : _a.substr(2);
  }
  get sortKey() {
    var _a, _b, _c;
    return (_c = (_b = (_a = this.raw.suborg) != null ? _a : this.group) != null ? _b : this.organization) != null ? _c : this.name;
  }
  get avatarUrl() {
    return this.raw.photo;
  }
  get bannerUrl() {
    return this.raw.banner;
  }
  get twitterName() {
    return this.raw.twitter;
  }
  get videoCount() {
    return typeof this.raw.video_count === "string" ? Number(this.raw.video_count) : this.raw.video_count;
  }
  get subscriberCount() {
    return typeof this.raw.subscriber_count === "string" ? Number(this.raw.subscriber_count) : this.raw.subscriber_count;
  }
  get viewCount() {
    return typeof this.raw.view_count === "string" ? Number(this.raw.view_count) : this.raw.view_count;
  }
  get clipCount() {
    return typeof this.raw.clip_count === "string" ? Number(this.raw.clip_count) : this.raw.clip_count;
  }
  get language() {
    return this.raw.lang;
  }
  get createdAt() {
    return typeof this.raw.published_at === "string" ? new Date(this.raw.published_at) : void 0;
  }
  get isInactive() {
    return this.raw.inactive;
  }
  get description() {
    return this.raw.description;
  }
};

// src/types/comment.ts
init_cjs_shims();
var Comment = class {
  constructor(raw) {
    this.raw = raw;
  }
  get key() {
    return this.raw.comment_key;
  }
  get videoId() {
    return this.raw.video_id;
  }
  get content() {
    return this.raw.message;
  }
};

// src/types/enums/index.ts
init_cjs_shims();

// src/types/enums/channel-type.ts
init_cjs_shims();
var ChannelType;
(function(ChannelType2) {
  ChannelType2["VTuber"] = "vtuber";
  ChannelType2["Subber"] = "subber";
})(ChannelType || (ChannelType = {}));

// src/types/enums/extra-data.ts
init_cjs_shims();
var ExtraData;
(function(ExtraData2) {
  ExtraData2["Clips"] = "clips";
  ExtraData2["Refers"] = "refers";
  ExtraData2["Sources"] = "sources";
  ExtraData2["Simulcasts"] = "simulcasts";
  ExtraData2["Mentions"] = "mentions";
  ExtraData2["Description"] = "description";
  ExtraData2["LiveInfo"] = "live_info";
  ExtraData2["ChannelStats"] = "channel_stats";
  ExtraData2["Songs"] = "songs";
})(ExtraData || (ExtraData = {}));

// src/types/enums/sort-order.ts
init_cjs_shims();
var SortOrder;
(function(SortOrder2) {
  SortOrder2["Ascending"] = "asc";
  SortOrder2["Descending"] = "desc";
})(SortOrder || (SortOrder = {}));

// src/types/enums/video-search-type.ts
init_cjs_shims();
var VideoSearchType;
(function(VideoSearchType2) {
  VideoSearchType2["Clips"] = "clips";
  VideoSearchType2["Videos"] = "videos";
  VideoSearchType2["Collabs"] = "collabs";
})(VideoSearchType || (VideoSearchType = {}));

// src/types/enums/video-status.ts
init_cjs_shims();
var VideoStatus;
(function(VideoStatus2) {
  VideoStatus2["New"] = "new";
  VideoStatus2["Upcoming"] = "upcoming";
  VideoStatus2["Live"] = "live";
  VideoStatus2["Past"] = "past";
  VideoStatus2["Missing"] = "missing";
})(VideoStatus || (VideoStatus = {}));

// src/types/enums/video-type.ts
init_cjs_shims();
var VideoType;
(function(VideoType2) {
  VideoType2["Stream"] = "stream";
  VideoType2["Clip"] = "clip";
})(VideoType || (VideoType = {}));

// src/types/params/index.ts
init_cjs_shims();

// src/types/params/channel-videos-param.ts
init_cjs_shims();

// src/types/params/channels-param.ts
init_cjs_shims();

// src/types/params/options.ts
init_cjs_shims();

// src/types/params/videos-param.ts
init_cjs_shims();

// src/types/raw/index.ts
init_cjs_shims();

// src/types/raw/channel-raw.ts
init_cjs_shims();

// src/types/raw/comment-raw.ts
init_cjs_shims();

// src/types/raw/song-raw.ts
init_cjs_shims();

// src/types/raw/video-raw.ts
init_cjs_shims();

// src/types/song.ts
init_cjs_shims();
var Song = class {
  constructor(raw) {
    this.raw = raw;
  }
  get artUrl() {
    return this.raw.art;
  }
  get name() {
    return this.raw.name;
  }
  get startTime() {
    return this.raw.start;
  }
  get endTime() {
    return this.raw.end;
  }
  get iTunesId() {
    return this.raw.itunesid;
  }
  get artist() {
    return this.raw.original_artist;
  }
};

// src/types/video.ts
init_cjs_shims();
var Video = class {
  constructor(raw) {
    this.raw = raw;
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
    this.channel = new Channel(this.raw.channel);
    this.comments = (_b = (_a = this.raw.comments) == null ? void 0 : _a.map((comment) => new Comment(comment))) != null ? _b : [];
    this.clips = (_d = (_c = this.raw.clips) == null ? void 0 : _c.map((video) => new Video(video))) != null ? _d : [];
    this.sources = (_f = (_e = this.raw.sources) == null ? void 0 : _e.map((video) => new Video(video))) != null ? _f : [];
    this.refers = (_h = (_g = this.raw.refers) == null ? void 0 : _g.map((video) => new Video(video))) != null ? _h : [];
    this.simulcasts = (_j = (_i = this.raw.simulcasts) == null ? void 0 : _i.map((video) => new Video(video))) != null ? _j : [];
    this.mentions = (_l = (_k = this.raw.mentions) == null ? void 0 : _k.map((channel) => new Channel(channel))) != null ? _l : [];
    this.songs = (_n = (_m = this.raw.songs) == null ? void 0 : _m.map((song) => new Song(song))) != null ? _n : [];
  }
  toRaw() {
    return this.raw;
  }
  get videoId() {
    return this.raw.id;
  }
  get title() {
    return this.raw.title;
  }
  get videoType() {
    return this.raw.type;
  }
  get topic() {
    return this.raw.topic_id;
  }
  get publishedAt() {
    return typeof this.raw.published_at === "string" ? new Date(this.raw.published_at) : void 0;
  }
  get availableAt() {
    return typeof this.raw.available_at === "string" ? new Date(this.raw.available_at) : void 0;
  }
  get duration() {
    return this.raw.duration;
  }
  get status() {
    return this.raw.status;
  }
  get scheduledStart() {
    return typeof this.raw.start_scheduled === "string" ? new Date(this.raw.start_scheduled) : void 0;
  }
  get actualStart() {
    return typeof this.raw.start_actual === "string" ? new Date(this.raw.start_actual) : void 0;
  }
  get actualEnd() {
    return typeof this.raw.end_actual === "string" ? new Date(this.raw.end_actual) : void 0;
  }
  get liveViewers() {
    return this.raw.live_viewers;
  }
  get description() {
    return this.raw.description;
  }
  get songCount() {
    return this.raw.songcount;
  }
  get channelId() {
    var _a;
    return (_a = this.raw.channel_id) != null ? _a : this.channel.channelId;
  }
};

// src/client.ts
function querystring(obj) {
  return new URLSearchParams(obj).toString();
}
var HolodexApiClient = class {
  constructor(options) {
    var _a;
    (_a = options.url) != null ? _a : options.url = "https://holodex.net/api/v2";
    this.httpClient = import_axios.default.create({
      baseURL: options.url,
      headers: {
        "X-APIKEY": options.apiKey
      }
    });
    (0, import_axios_retry.default)(this.httpClient, {
      retries: 3,
      retryDelay: import_axios_retry.default.exponentialDelay,
      retryCondition: (error) => import_axios_retry.default.isNetworkOrIdempotentRequestError(error) || error.code === "ECONNABORTED",
      shouldResetTimeout: true
    });
  }
  async getChannels(params = {}) {
    var _a, _b, _c, _d;
    (_a = params.limit) != null ? _a : params.limit = 25;
    (_b = params.offset) != null ? _b : params.offset = 0;
    (_c = params.order) != null ? _c : params.order = SortOrder.Ascending;
    (_d = params.sort) != null ? _d : params.sort = "org";
    if (params.lang && Array.isArray(params.lang)) {
      params.lang = params.lang.join(",");
    }
    const q = querystring(__spreadProps(__spreadValues({}, params), {
      limit: Math.min(Math.max(params.limit, 1), 50)
    }));
    const { data } = await this.httpClient.get(`/channels?${q}`);
    return data.map((channel) => new Channel(channel));
  }
  async getChannel(channelId) {
    const { data } = await this.httpClient.get(`/channels/${channelId}`);
    return new Channel(data);
  }
  async getVideosByChannelId(channelId, searchType = VideoSearchType.Videos, params = {}) {
    var _a, _b, _c;
    (_a = params.lang) != null ? _a : params.lang = "all";
    (_b = params.limit) != null ? _b : params.limit = 25;
    (_c = params.offset) != null ? _c : params.offset = 0;
    const q = querystring(__spreadProps(__spreadValues({}, params), {
      include: Array.isArray(params.include) ? params.include.join(",") : params.include,
      lang: Array.isArray(params.lang) ? params.lang.join(",") : params.lang,
      limit: Math.min(Math.max(params.limit, 1), 50)
    }));
    const { data } = await this.httpClient.get(`/channels/${channelId}/${searchType}?${q}`);
    return data.map((video) => new Video(video));
  }
  async getVideo(videoId, includeComments = false, languages) {
    languages != null ? languages : languages = "all";
    const params = {
      lang: Array.isArray(languages) ? languages.join(",") : languages
    };
    if (includeComments) {
      params.c = 1;
    }
    const q = querystring(params);
    const { data } = await this.httpClient.get(`/videos/${videoId}?${q}`);
    return new Video(data);
  }
  async getLiveVideosByChannelId(channelIds) {
    const q = querystring({
      channels: Array.isArray(channelIds) ? channelIds.join(",") : channelIds
    });
    const { data } = await this.httpClient.get(`/users/live?${q}`);
    return data.map((video) => new Video(video));
  }
  async getLiveVideos(params = {}) {
    var _a, _b;
    (_a = params.lang) != null ? _a : params.lang = "all";
    (_b = params.offset) != null ? _b : params.offset = 0;
    const q = querystring(__spreadProps(__spreadValues({}, params), {
      include: Array.isArray(params.include) ? params.include.join(",") : params.include,
      lang: Array.isArray(params.lang) ? params.lang.join(",") : params.lang
    }));
    const { data } = await this.httpClient.get(`/live?${q}`);
    return data.map((video) => new Video(video));
  }
  async getVideos(params = {}) {
    var _a, _b, _c, _d, _e;
    (_a = params.lang) != null ? _a : params.lang = "all";
    (_b = params.limit) != null ? _b : params.limit = 25;
    (_c = params.offset) != null ? _c : params.offset = 0;
    (_d = params.order) != null ? _d : params.order = SortOrder.Descending;
    (_e = params.sort) != null ? _e : params.sort = "available_at";
    const q = querystring(__spreadProps(__spreadValues({}, params), {
      include: Array.isArray(params.include) ? params.include.join(",") : params.include,
      lang: Array.isArray(params.lang) ? params.lang.join(",") : params.lang,
      limit: Math.min(Math.max(params.limit, 1), 50)
    }));
    const { data } = await this.httpClient.get(`/videos?${q}`);
    return data.map((video) => new Video(video));
  }
};

// src/types/org.ts
init_cjs_shims();
var ORGS = Object.freeze({
  all: "All Vtubers",
  hololive: "Hololive",
  nijisanji: "Nijisanji",
  "kizuna-ai": "Kizuna Ai Inc.",
  indie: "Independents",
  vspo: "VSpo",
  vshojo: "VShojo",
  "774inc": "774inc",
  ".live": ".LIVE",
  noripro: "Nori Pro",
  react: "ReACT",
  voms: "VOMS",
  kamitsubaki: "KAMITSUBAKI",
  eilene: "Eilene Family",
  "hoshimeguri-gakuen": "Hoshimeguri Gakuen",
  "riot-music": "Riot Music",
  propro: "ProPro",
  wactor: "WACTOR",
  "aogiri-highschool": "Aogiri Highschool",
  masquerade: "Masquerade",
  tsunderia: "Tsunderia",
  "yuni-create": "Yuni Create",
  "atelier-live": "Atelier Live",
  prism: "PRISM",
  "voice-ore": "VOICE-ORE",
  vivid: "ViViD",
  chukorara: "Chukorara",
  "x-encount": "X enc'ount",
  marbl_s: "Marbl_s",
  iridori: "Iridori",
  "unreal-night-girls": "Unreal Night Girls",
  "v-dimension.creators": "V Dimension.Creators"
});

// src/cli/helpers.ts
import_dayjs.default.extend(import_relativeTime.default);
function handlerFactory({
  processor,
  printer = console.log
}) {
  return async (argv) => {
    const formatJSON = argv.json;
    const config = new import_conf.default({
      projectName: "holodex"
    });
    const getClient = getClientFactory(config);
    const context = { getClient, argv, config };
    const response = await Promise.resolve(processor(context));
    if (formatJSON) {
      if (typeof response === "string") {
        console.log(response);
      } else if (Array.isArray(response)) {
        printAsJson(response.map((r) => r.toRaw()));
      } else {
        printAsJson(response.toRaw());
      }
      return;
    }
    printer(response);
  };
}
function getClientFactory(config) {
  return () => {
    const apiKey = process.env.HOLODEX_APIKEY || config.get("token");
    if (!apiKey) {
      console.log(import_chalk.default.red(`$ holodex config token <apiKey>`));
      process.exit(1);
    }
    return new HolodexApiClient({ apiKey });
  };
}
function resolveOrg(scope) {
  return ORGS[scope] || ORGS["all"];
}
function fromNow(date) {
  return (0, import_dayjs.default)(date).fromNow();
}
function printAsJson(obj) {
  console.log(JSON.stringify(obj, null, 2));
}
function videoLink(videoId, title) {
  const ytURL = `https://www.youtube.com/watch?v=${videoId}`;
  return (0, import_terminal_link.default)(import_chalk.default.cyan.bold(title), ytURL);
}
function channelLink(channelId, title) {
  const ytURL = `https://www.youtube.com/channel/${channelId}`;
  return (0, import_terminal_link.default)(import_chalk.default.cyan.bold(title), ytURL);
}

// src/cli/commands/channel.ts
var handler = handlerFactory({
  processor: async ({ getClient, argv }) => {
    const id = argv.id;
    const channel = await getClient().getChannel(id);
    return channel;
  },
  printer: (channel) => {
    var _a;
    console.log(channelLink(channel.channelId, channel.name));
    console.log(import_chalk2.default.gray((_a = channel.description) == null ? void 0 : _a.slice(0, 120), "..."));
  }
});
var command = {
  command: "channel <id>",
  describe: "Get channel info",
  builder: (yargs2) => yargs2.positional("id", {
    type: "string",
    required: true,
    desc: "Channel id"
  }),
  handler
};
var channel_default = command;

// src/cli/commands/live.ts
init_cjs_shims();
var import_chalk3 = __toModule(require("chalk"));
var handler2 = handlerFactory({
  processor: async ({ getClient, argv }) => {
    const org = resolveOrg(argv.scope);
    const videos = await getClient().getLiveVideos({ org });
    return videos;
  },
  printer: (videos) => {
    for (const video of videos) {
      console.log(videoLink(video.videoId, video.title));
      console.log(import_chalk3.default.gray(fromNow(video.scheduledStart)));
    }
  }
});
var command2 = {
  command: "live [scope]",
  describe: "Get live streams",
  builder: (yargs2) => yargs2.positional("scope", {
    type: "string",
    default: "all",
    desc: "Search scope",
    choices: Object.keys(ORGS)
  }),
  handler: handler2
};
var live_default = command2;

// src/cli/commands/video.ts
init_cjs_shims();
var import_chalk4 = __toModule(require("chalk"));
var handler3 = handlerFactory({
  processor: async ({ getClient, argv }) => {
    const id = argv.id;
    const video = await getClient().getVideo(id);
    return video;
  },
  printer: (video) => {
    var _a;
    console.log(videoLink(video.videoId, video.title));
    console.log(import_chalk4.default.gray((_a = video.description) == null ? void 0 : _a.slice(0, 120), "..."));
  }
});
var command3 = {
  command: "video <id>",
  describe: "Get video info",
  builder: (yargs2) => yargs2.positional("id", {
    type: "string",
    required: true,
    desc: "video id"
  }),
  handler: handler3
};
var video_default = command3;

// src/cli/commands/config.ts
init_cjs_shims();
var handler4 = handlerFactory({
  processor: async ({ argv, config }) => {
    const { key, value } = argv;
    if (!value) {
      return config.get(key);
    }
    config.set(key, value);
    return `Set: ${key} = ${value}`;
  }
});
var command4 = {
  command: "config <key> [<value>]",
  describe: "Get/set config value",
  builder: (yargs2) => yargs2.positional("key", {
    type: "string",
    required: true,
    desc: "Config key"
  }).positional("value", {
    type: "string",
    desc: "Config value"
  }),
  handler: handler4
};
var config_default = command4;

// src/cli.ts
(0, import_yargs.default)(process.argv.slice(2)).scriptName("holodex").help("help").alias("help", "h").option("json", {
  alias: "j",
  desc: "Print JSON"
}).option("token", {
  type: "string",
  alias: "t",
  desc: "API Token"
}).command(live_default).command(channel_default).command(video_default).command(config_default).demandCommand().argv;
